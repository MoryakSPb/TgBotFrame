<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthorizationMiddleware_Denied" xml:space="preserve">
    <value>В выполнении команды отказано, вы не имеете необходимых ролей</value>
  </data>
  <data name="Category_Description_Roles" xml:space="preserve">
    <value>Данные команды позволяют управлять ролями, а также производить некоторые действия с их участниками, например, упоминать их</value>
  </data>
  <data name="Category_Name_Roles" xml:space="preserve">
    <value>Роли</value>
  </data>
  <data name="Command_Description_AddRole" xml:space="preserve">
    <value>Приписывает к указанный роли пользователя.
Сначала укажите название роли, а затем идентификатор пользователя.</value>
  </data>
  <data name="Command_Description_Mention" xml:space="preserve">
    <value>Укажите название роли первым аргументом, чтобы упомянуть всех участников роли. Вызвав команду без аргументов, бот ответит списком ролей, участников которых можно упомянуть. Вызывав команду с двумя аргументами, администраторы бота могут управлять возможностью упоминания роли.
Первым аргументом является идентификатор роли, а вторым - признак возможности упоминания.</value>
  </data>
  <data name="Command_Description_RemoveRole" xml:space="preserve">
    <value>Исключает пользователя из участников роли. 
Сначала укажите название роли, а затем идентификатор пользователя.</value>
  </data>
  <data name="MentionController_Mention" xml:space="preserve">
    <value>, ваша роль упомянута</value>
  </data>
  <data name="MentionController_Mention_EditResult" xml:space="preserve">
    <value>Возможность упоминания роли {0} теперь</value>
  </data>
  <data name="MentionController_Mention_ListTitle" xml:space="preserve">
    <value>Возможность упоминания участников ролей:</value>
  </data>
  <data name="MentionController_Mention_NotFound" xml:space="preserve">
    <value>Роль не существует или в ней нет ни одного участника</value>
  </data>
  <data name="MentionController_Mention_Off" xml:space="preserve">
    <value> **выключена** </value>
  </data>
  <data name="MentionController_Mention_OffShort" xml:space="preserve">
    <value> *ВЫКЛ* </value>
  </data>
  <data name="MentionController_Mention_On" xml:space="preserve">
    <value> **включена** </value>
  </data>
  <data name="MentionController_Mention_OnShort" xml:space="preserve">
    <value> **ВКЛ** </value>
  </data>
  <data name="RoleManagementController_Add_NotFound" xml:space="preserve">
    <value>Роль "{0}" не существует</value>
  </data>
  <data name="RoleManagementController_Add_Success" xml:space="preserve">
    <value>Пользователю {0} назначена роль "{1}"</value>
  </data>
  <data name="RoleManagementController_Remove_NotFound" xml:space="preserve">
    <value>Пользователю {0} не назначена роль "{1}" или таковой не существует</value>
  </data>
  <data name="RoleManagementController_Remove_Success" xml:space="preserve">
    <value>Пользователь {0} более не имеет роли "{1}"</value>
  </data>
  <data name="BanController_Ban_Result" xml:space="preserve">
    <value>Пользователь {0} заблокирован до {1:F}</value>
  </data>
  <data name="BanController_UnBan_Result" xml:space="preserve">
    <value>Пользователь {0} разблокирован</value>
  </data>
  <data name="BanController_BanInfo_NotFound" xml:space="preserve">
    <value>У данного пользователя нет блокировок</value>
  </data>
  <data name="BanController_BanInfo_Until" xml:space="preserve">
    <value>До </value>
  </data>
  <data name="BanController_BanInfo_Infinite" xml:space="preserve">
    <value>Без срока</value>
  </data>
  <data name="Category_Name_Ban" xml:space="preserve">
    <value>Блокировки</value>
  </data>
  <data name="Command_Description_Ban" xml:space="preserve">
    <value>Блокирует пользователя внутри бота, не позволяя ему исполнять команды. Различные варианты команды предполагают, что целым является идентификатор пользователя, длительность — время блокировки, а текст — описание причины блокировки для администраторов. Если время блокировки не указано, считается, что блокировка вечная.</value>
  </data>
  <data name="Command_Description_UnBan" xml:space="preserve">
    <value>Досрочно снимает блокировку у пользователя, чей идентификатор был указан</value>
  </data>
  <data name="Command_Description_BanInfo" xml:space="preserve">
    <value>Отвечает списком заблокированных пользователей. Указав целым параметром идентификатор пользователя, бот отвечает подробностями блокировки</value>
  </data>
  <data name="Category_Description_Ban" xml:space="preserve">
    <value>Данные команды позволяют управлять блокировками пользователей</value>
  </data>
  <data name="BanController_UnBan_NotFound" xml:space="preserve">
    <value>У пользователя нет активных блокировок</value>
  </data>
  <data name="BanController_Ban_ResultForever" xml:space="preserve">
    <value>Пользователь {0} заблокирован навсегда</value>
  </data>
  <data name="BanController_BanInfo_Empty" xml:space="preserve">
    <value>На данный момент активные блокировки отсутствуют</value>
  </data>
  <data name="BanController_Ban_NotReply" xml:space="preserve">
    <value>Данную команду необходимо использовать в ответ на сообщение пользователя</value>
  </data>
</root>